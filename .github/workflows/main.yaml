name: Deploy node.js app docker 

on:
  push:
    branches:
      - main
      - dev 
      - test 
  workflow_dispatch: 

permissions: 
  contents: read
  id-token: write 


jobs: 
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Image 
        run: |
          echo "Building Docker image for branch: ${{ github.ref_name }}"
          if [ "${{ github.ref_name }}" == "main" ]; then
            docker build -t ${{secrets.DOCKER_USERNAME}}/spacecharacter:latest . 
          elif [ "${{ github.ref_name }}" == "dev" ]; then
            docker build -t ${{secrets.DOCKER_USERNAME}}/spacecharacter:dev . 
          elif [ "${{ github.ref_name }}" == "test" ]; then
            docker build -t ${{secrets.DOCKER_USERNAME}}/spacecharacter:test . 
          else
            echo "No specific tag for branch: ${{ github.ref_name }}"
            
          fi
      
      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Push Docker Image
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            docker push ${{secrets.DOCKER_USERNAME}}/spacecharacter:latest
          elif [ "${{ github.ref_name }}" == "dev" ]; then
            docker push ${{secrets.DOCKER_USERNAME}}/spacecharacter:dev
          elif [ "${{ github.ref_name }}" == "test" ]; then
            docker push ${{secrets.DOCKER_USERNAME}}/spacecharacter:test
          else
            echo "No specific tag for branch: ${{ github.ref_name }}"
          fi
      
      - name: Logout from Docker Hub
        run: |
          docker logout ${{ secrets.DOCKER_USERNAME }} 
          docker logout
      
      - name: Start SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      
      - name: SSH into server
        run: ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} -p ${{ secrets.EC2_PORT }} "
            if [ github_ref == main ]; then
              docker pull ${{secrets.DOCKER_USERNAME}}/spacecharacter:latest
              docker stop spacecharacter || true
              docker rm spacecharacter || true
              docker run -d --name spacecharacter -p 3000:3000 ${{secrets.DOCKER_USERNAME}}/spacecharacter:latest
            elif [ github_ref == dev ]; then
              docker pull ${{secrets.DOCKER_USERNAME}}/spacecharacter:dev
              docker stop spacecharacter-dev || true
              docker rm spacecharacter-dev || true
              docker run -d --name spacecharacter-dev -p 3001:3000 ${{secrets.DOCKER_USERNAME}}/spacecharacter:dev
            elif [ github_ref == test ]; then
              docker pull ${{secrets.DOCKER_USERNAME}}/spacecharacter:test
              docker stop spacecharacter-test || true
              docker rm spacecharacter-test || true
              docker run -d --name spacecharacter-test -p 3002:3000 ${{secrets.DOCKER_USERNAME}}/spacecharacter:test
            else
              echo "No specific deployment for branch: ${{ github.ref_name }}"
            fi
          "


